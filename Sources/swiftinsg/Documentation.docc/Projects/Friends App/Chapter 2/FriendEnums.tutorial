@Tutorial(time: 60, projectFiles: "Friends - Enum.zip") {
    @Intro(title: "Categorising & Enumerating Friends") {
        Use enums in Swift to create custom options and use `ForEach` to iterate through an array.  
        
        `Friend`s are similar to Pokémon in many ways, they are indexed and id-ed, they’re mutated, and they’re fictional. Another key similarity is that friends have types. Some may be `.water` type, others may be `.fire` type.
        
        @Image(source: "friends-ch2-enum-hero.png", alt: "")
    }
    
    @Section(title: "Creating an Enum") {
        @ContentAndMedia {
            Create an enum for the `FriendType`. Think of an enum like a multiple choice field, the user is limited to certain predefined options (or `case`s). 
            
            @Image(source: <#file#>, alt: "<#accessible description#>")
        }
        
        @Steps {
            @Step {
                Create a new file. In the menubar, go to **File** → **New** → **File…** or **⌘N** (Command-N).
                
                This file will be used to create the `FriendType` enum.
                
                @Image(source: "friends-ch2-enum-s1-new file menubar.png", alt: "")
            }
            
            @Step {
                Select a **Swift file** and press **Next**.
                @Image(source: "friends-ch2-enum-s1-new file.png", alt: "")
            }
            
            @Step {
                Name the file **"FriendType"**
                @Image(source: "friends-ch2-enum-s1-save.png", alt: "")
            }
            
            @Step {
                This should be what your file looks like.
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-0-FriendType.swift")
            }
            
            @Step {
                Create an enum called `FriendType`.
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-1-FriendType.swift")
            }
            
            @Step {
                There are several types of friends, `.normal`, `.fire`, `.water`, `.grass`, `.electric` & `.ice`. We can add those as cases in the enum.
                
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-2-FriendType.swift")
            }
            
            @Step {
                Add raw values to the Friend. The `rawValue` is a `String` that will be the title of the case.  
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-3-FriendType.swift")
            }
            
            @Step {
                Create a function called `getSymbolName()` that returns a `String`.
                
                This function will be used to get the SF Symbol name for each `FriendType`.
                
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-4-FriendType.swift")
            }
            
            @Step {
                Within the function, create a `switch` statement to return the SF Symbol icon name. 
                
                Think of a switch statement like an if-else statement but simpler. 
                
                @Code(name: "FriendType.swift", file: "friends-ch2-enum-s1-5-FriendType.swift")
            }
        }
    }
    
    @Section(title: "Implementing the Enum") {
        @ContentAndMedia {
            Implement the `FriendType` enum by adding it to the `Friend` struct and updating every instance of the `Friend` struct.
            
            @Image(source: <#file#>, alt: "<#accessible description#>")
        }
        
        @Steps {
            @Step {
                Open the `Friend.swift` file
                @Code(name: "Friend.swift", file: "friends-ch2-enum-s2-0-Friend.swift")
            }
            
            @Step {
                Create a new property, `types` and set its type as an array of `FriendType` or `[FriendType]`.
                @Code(name: "Friend.swift", file: "friends-ch2-enum-s2-1-Friend.swift")
            }
            
            @Step {
                Open the `ContentView.swift` file
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s2-2-ContentView.swift")
            }
            
            @Step {
                Add `FriendType`s to every `Friend`.
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s2-3-ContentView.swift")
            }
            
            @Step {
                Open the `FriendDetailView.swift` file
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s2-4-FriendDetailView.swift")
            }
            
            @Step {
                Update the `Friend` in the preview with the `FriendType`. 
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s2-5-FriendDetailView.swift")
            }
        }
    }
    
    @Section(title: "Adding Friend's Type to FriendDetailView") {
        @ContentAndMedia {
            Use `HStack`, `ForEach` and `Label`s to create a View to display each `friend`'s `types`   
            
            @Image(source: "friends-ch2-enum-s3-Hero.png", alt: "<#accessible description#>")
        }
        
        @Steps {
            @Step {
                Open the `FriendDetailView.swift` file
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s3-0-FriendDetailView.swift") {
                    @Image(source: "friends-ch2-enum-s3-0-Preview.png", alt: "")
                }
            }
            
            @Step {
                Create a `HStack` with some `.padding()`. This will be used to show the different friend types.
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s3-1-FriendDetailView.swift") {
                    @Image(source: "friends-ch2-enum-s3-1-Preview.png", alt: "")
                }
            }
            
            @Step {
                Within the `HStack`, add a `ForEach`. 
                
                `ForEach` functions like a for-loop but for SwiftUI elements. It allows you to iterate through an array of elements, in this case, `FriendType`s.
                > As `FriendType` does not conform to `Identifiable`, we will need to manually set the `id` using a key path. In this case, the `rawValue` is set as the `id`.
                
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s3-2-FriendDetailView.swift") {
                    @Image(source: "friends-ch2-enum-s3-2-Preview.png", alt: "")
                }
            }
            
            @Step {
                Create a `Label` with the text as the `rawValue`. The `rawValue` is a `String` that was set earlier in the enum. See [Creating an Enum](#Creating-an-Enum).
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s3-3-FriendDetailView.swift") {
                    @Image(source: "friends-ch2-enum-s3-3-Preview.png", alt: "")
                }
            }
            
            @Step {
                Customise the `Label`s with a little `.padding`, a `.background`, `.foregroundColor` and `.cornerRadius`.
                @Code(name: "FriendDetailView.swift", file: "friends-ch2-enum-s3-4-FriendDetailView.swift") {
                    @Image(source: "friends-ch2-enum-s3-4-Preview.png", alt: "")
                }
            }
        }
    }
    
    @Section(title: "Adding Friend's Type to ContentView") {
        @ContentAndMedia {
            Display the `Friend`'s `types` icons in the `List` with a `Spacer`, `HStack` and `Image`.
            
            @Image(source: "friends-ch2-enum-s4-Hero", alt: "")
        }
        
        @Steps {
            @Step {
                Open the `ContentView.swift` file
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s4-0-ContentView.swift") {
                    @Image(source: "friends-ch2-enum-s4-0-Preview.png", alt: "")
                }
            }
            
            @Step {
                In the `List`, embed the `friend`'s `.school` `Text` in a `HStack`. 
                
                The location of the **Embed in HStack** button may differ based on the version of Xcode you are running. If you do not see the **Embed in HStack** button, you can manually embed the `Text` in a `HStack` (refer to the next step for the final code from this step).
                
                @Video(source: "friends-ch2-enum-s4-1-Embed.mp4", posterFrame: "")
            }
            
            @Step {
                After embedding in HStack, this is what your code should look like.
                
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s4-2-ContentView.swift") {
                    @Image(source: "friends-ch2-enum-s4-2-Preview.png", alt: "")
                }
            }
            
            @Step {
                Within the `HStack`, add a `ForEach` with the `friend`'s `types`. From there, create `Image`s with the SF Symbol.
                
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s4-3-ContentView.swift") {
                    @Image(source: "friends-ch2-enum-s4-3-Preview.png", alt: "")
                }
            }
            
            @Step {
                Align the icons to the right of the `HStack` using a `Spacer()`.
                
                @Code(name: "ContentView.swift", file: "friends-ch2-enum-s4-4-ContentView.swift") {
                    @Image(source: "friends-ch2-enum-s4-4-Preview.png", alt: "")
                }
            }
            
            @Step {
                and… that's it!
                
                @Video(source: "friends-ch2-enum-s4-5-Finally time to sleep.mp4", posterFrame: "")
            }
        }
    }
}
