{"metadata":{"title":"Persisting Todos","categoryPathComponent":"Todo","role":"project","category":"Todo App"},"hierarchy":{"modules":[{"reference":"doc:\/\/swiftinsg\/tutorials\/Todo\/Creating-a-Todo-List-app","projects":[{"reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists","sections":[{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Creating-a-Project"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Create-a-Todo"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Creating-a-List"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Embedding-in-a-NavigationView"}]},{"reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough","sections":[{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Adding-a-Checkmark"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Adding-a-Strikethrough"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Toggling-a-Todo"}]},{"reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation","sections":[{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation#Deleting-a-Todo"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation#Moving-Todos"}]},{"reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew","sections":[{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Creating-a-new-SwiftUI-View"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Building-a-Form"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Saving-a-Todo"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Dismissing-the-Modal"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Embedding-in-NavigationView"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Presenting-the-Modal"}]},{"reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence","sections":[{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Conforming-to-Codable"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Creating-a-Task-Model"},{"kind":"task","reference":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Save-and-Load-Data"}]}]}],"reference":"doc:\/\/swiftinsg\/tutorials\/Todo","paths":[["doc:\/\/swiftinsg\/tutorials\/Todo","doc:\/\/swiftinsg\/tutorials\/Todo\/$volume","doc:\/\/swiftinsg\/tutorials\/Todo\/Creating-a-Todo-List-app"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Persistence is not that hard, all you need is some… persistence. HAHHAHAHHAHHHAHAHAH. Persistence refers to the concept of storing data in a way that they will remain there even if you close the app. Currently, when you close the app, any data is thrown away. If you create a new todo, it gets thrown away when you close the app. We want data to persist when the app is closed otherwise the todo list app will be as forgetful as you."}]}],"estimatedTimeInMinutes":15,"title":"Persisting Todos","image":"","chapter":"Creating a Todo List app","kind":"hero","backgroundImage":""},{"kind":"tasks","tasks":[{"anchor":"Conforming-to-Codable","title":"Conforming to Codable","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to encode and decode the "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"s, the "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct needs to conform to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"todo-ch1-persistence-s1-0-Todo.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"codeVoice","code":"Todo.swift"},{"type":"text","text":" file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s1-1-Todo.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" after "},{"type":"codeVoice","code":"Todo: "},{"type":"text","text":" to conform to the Codable protocol."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Creating-a-Task-Model","title":"Creating a Task Model","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In a new Swift file, create a task model that will perform the persistence tasks."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"anchor":"Create-a-new-Swift-file","level":2,"type":"heading","text":"Create a new Swift file"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" file. In the menubar, go to "},{"type":"strong","inlineContent":[{"type":"text","text":"File → New → File"}]},{"type":"text","text":"."}]}],"caption":[{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, you may use ⌘N (Command-N) to create a new file."}]}]}],"type":"step","runtimePreview":null,"media":"todo-ch1-persistence-s2-0-New File.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select "},{"type":"strong","inlineContent":[{"type":"text","text":"Swift File"}]},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"shared-new swift file.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Name it "},{"type":"strong","inlineContent":[{"type":"text","text":"“TodoData”"}]},{"type":"text","text":" and save it."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"todo-ch1-persistence-s2-2-Save.png"},{"code":"todo-ch1-persistence-s2-3-TodoData.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is what you should see in the "},{"type":"codeVoice","code":"TodoData.swift"},{"type":"text","text":" file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"anchor":"Creating-Persistence-Model","level":2,"type":"heading","text":"Creating Persistence Model"},{"code":"todo-ch1-persistence-s2-4-TodoData.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copy the code from "},{"type":"reference","isActive":true,"identifier":"https:\/\/gist.github.com\/jiachenyee\/f0a32b36cc171bd942be4acc0c344dcc"},{"type":"text","text":" and paste it in "},{"type":"codeVoice","code":"TodoData.swift"},{"type":"text","text":". This file provides the boilerplate code required to make an array of structs persistent."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ignore the errors for now, we’ll get to them later."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This GitHub Gist can be reused for any project that requires saving an array of structs."}]}]}],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s2-5-TodoData.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace all the placeholders. “Model” → “Todo”, “model” → “todo”."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s2-6-TodoData.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add in sample "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"s. These will be used if there are no other "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"s."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"<#text#>"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Save-and-Load-Data","title":"Save and Load Data","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, save and load data from the saved file."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"anchor":"Updating-ContentView","level":2,"type":"heading","text":"Updating ContentView"},{"code":"todo-ch1-persistence-s3-0-ContentView.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-1-ContentView.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" a "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variable."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will be important when "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" is passed from the App’s Swift file later on."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-2-ContentView.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the "},{"type":"codeVoice","code":"PreviewProvider"},{"type":"text","text":" with the "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" todos by providing it with a constant "},{"type":"codeVoice","code":"[]"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-3-TodosApp.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"codeVoice","code":"TodosApp.swift"},{"type":"text","text":" file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-4-TodosApp.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"todoData"},{"type":"text","text":" "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":" and pass the "},{"type":"codeVoice","code":".todos"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-5-TodosApp.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the app appears, load the data from "},{"type":"codeVoice","code":"todoData"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todo-ch1-persistence-s3-6-TodosApp.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"@Environment"},{"type":"text","text":" variable to allow for data to be saved when the app is closed."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]}],"references":{"doc://swiftinsg/tutorials/swiftinsg/0-TodoLists#Creating-a-Project":{"role":"pseudoSymbol","title":"Creating a Project","abstract":[{"type":"text","text":"This tutorial covers how to use create a "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct, using "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s to iterate over an array of "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" and embedding it in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" with a "},{"type":"codeVoice","code":".navigationTitle"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Creating-a-Project","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/0-todolists#Creating-a-Project"},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Saving-a-Todo":{"role":"pseudoSymbol","title":"Saving a Todo","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Saving-a-Todo","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Saving-a-Todo"},"todo-ch1-persistence-s2-3-TodoData.swift":{"syntax":"swift","content":["import Foundation"],"fileName":"TodoData.swift","identifier":"todo-ch1-persistence-s2-3-TodoData.swift","type":"file","fileType":"swift","highlights":[]},"todo-ch1-persistence-s2-2-Save.png":{"alt":"","type":"image","identifier":"todo-ch1-persistence-s2-2-Save.png","variants":[{"url":"\/images\/todo-ch1-persistence-s2-2-Save~dark.png","size":{"width":749,"height":286},"traits":["1x","dark"]},{"url":"\/images\/todo-ch1-persistence-s2-2-Save.png","size":{"width":749,"height":286},"traits":["1x","light"]}]},"shared-new swift file.png":{"alt":"","type":"image","identifier":"shared-new swift file.png","variants":[{"url":"\/images\/shared-new%20swift%20file~dark.png","size":{"width":734,"height":524},"traits":["1x","dark"]},{"url":"\/images\/shared-new%20swift%20file.png","size":{"width":730,"height":521},"traits":["1x","light"]}]},"todo-ch1-persistence-s2-4-TodoData.swift":{"syntax":"swift","content":["import Foundation","import SwiftUI","","class ModelData: ObservableObject {","    @Published var models: [Model] = []","    ","    let sampleModels = []","    ","    func getArchiveURL() -> URL {","        let plistName = \"models.plist\"","        let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first!","        ","        return documentsDirectory.appendingPathComponent(plistName)","    }","    ","    func save() {","        let archiveURL = getArchiveURL()","        let propertyListEncoder = PropertyListEncoder()","        let encodedModels = try? propertyListEncoder.encode(models)","        try? encodedModels?.write(to: archiveURL, options: .noFileProtection)","    }","    ","    func load() {","        let archiveURL = getArchiveURL()","        let propertyListDecoder = PropertyListDecoder()","        ","        var finalModels: [Model]!","        ","        if let retrievedModelData = try? Data(contentsOf: archiveURL),","            let decodedModels = try? propertyListDecoder.decode([Model].self, from: retrievedModelData) {","            finalModels = decodedModels","        } else {","            finalModels = sampleModels","        }","        ","        models = finalModels","    }","}"],"fileName":"TodoData.swift","identifier":"todo-ch1-persistence-s2-4-TodoData.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}]},"doc://swiftinsg/tutorials/swiftinsg/4-TodoPersistence#Conforming-to-Codable":{"role":"pseudoSymbol","title":"Conforming to Codable","abstract":[{"type":"text","text":"Persistence is not that hard, all you need is some… persistence. HAHHAHAHHAHHHAHAHAH. Persistence refers to the concept of storing data in a way that they will remain there even if you close the app. Currently, when you close the app, any data is thrown away. If you create a new todo, it gets thrown away when you close the app. We want data to persist when the app is closed otherwise the todo list app will be as forgetful as you."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Conforming-to-Codable","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/4-todopersistence#Conforming-to-Codable"},"doc://swiftinsg/tutorials/swiftinsg/2-TodoManipulation":{"role":"project","title":"Moving & Deleting Todos","estimatedTime":"25min","abstract":[{"type":"text","text":"Use an "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EditButton()"},{"type":"text","text":" to allow users to move and delete todos."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation","kind":"project","type":"topic","url":"\/tutorials\/swiftinsg\/2-todomanipulation"},"doc://swiftinsg/tutorials/swiftinsg/0-TodoLists#Embedding-in-a-NavigationView":{"role":"pseudoSymbol","title":"Embedding in a NavigationView","abstract":[{"type":"text","text":"This tutorial covers how to use create a "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct, using "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s to iterate over an array of "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" and embedding it in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" with a "},{"type":"codeVoice","code":".navigationTitle"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Embedding-in-a-NavigationView","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/0-todolists#Embedding-in-a-NavigationView"},"doc://swiftinsg/tutorials/swiftinsg/1-TodoStrikethrough#Toggling-a-Todo":{"role":"pseudoSymbol","title":"Toggling a Todo","abstract":[{"type":"text","text":"Add a checkmark using SF Symbols and use the "},{"type":"codeVoice","code":".strikethrough"},{"type":"text","text":" modifier to add a strikethrough when the todo "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Toggling-a-Todo","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/1-todostrikethrough#Toggling-a-Todo"},"todo-ch1-persistence-s3-0-ContentView.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    ","    @State var todos = [Todo(title: \"Feed the cat\", isCompleted: true),","                        Todo(title: \"Play with cat\"),","                        Todo(title: \"Get allergies\"),","                        Todo(title: \"Run away from cat\"),","                        Todo(title: \"Get a new cat\")]","    @State var isSheetPresented = false","    ","    var body: some View {","        NavigationView {","            List {","                ForEach(todos) { todo in","                    Button {","                        let todoIndex = todos.firstIndex(of: todo)!","                        todos[todoIndex].isCompleted.toggle()","                    } label: {","                        HStack {","                            Image(systemName: todo.isCompleted ? \"checkmark.circle.fill\" : \"circle\")","                            Text(todo.title)","                                .strikethrough(todo.isCompleted)","                                .foregroundColor(.black)","                        }","                    }","                }","                .onDelete { indexSet in","                    todos.remove(atOffsets: indexSet)","                }","                .onMove { indices, newOffset in","                    todos.move(fromOffsets: indices, toOffset: newOffset)","                }","            }","            .navigationTitle(\"Todos\")","            .navigationBarItems(leading: EditButton(),","                                trailing: Button {","                                    isSheetPresented = true","                                } label: {","                                    Image(systemName: \"plus\")","                                })","        }","        .sheet(isPresented: $isSheetPresented) {","            NewTodoView(todos: $todos)","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"todo-ch1-persistence-s3-0-ContentView.swift","type":"file","fileType":"swift","highlights":[]},"doc://swiftinsg/tutorials/swiftinsg/0-TodoLists#Create-a-Todo":{"role":"pseudoSymbol","title":"Create a Todo","abstract":[{"type":"text","text":"This tutorial covers how to use create a "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct, using "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s to iterate over an array of "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" and embedding it in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" with a "},{"type":"codeVoice","code":".navigationTitle"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Create-a-Todo","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/0-todolists#Create-a-Todo"},"todo-ch1-persistence-s3-4-TodosApp.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct TodosApp: App {","    ","    @ObservedObject var todoData = TodoData()","    ","    var body: some Scene {","        WindowGroup {","            ContentView(todos: $todoData.todos)","        }","    }","}"],"fileName":"TodosApp.swift","identifier":"todo-ch1-persistence-s3-4-TodosApp.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":7},{"line":10}]},"todo-ch1-persistence-s1-0-Todo.swift":{"syntax":"swift","content":["import Foundation","","struct Todo: Identifiable, Equatable {","    var id = UUID()","    ","    var title: String","    var isCompleted = false","}"],"fileName":"Todo.swift","identifier":"todo-ch1-persistence-s1-0-Todo.swift","type":"file","fileType":"swift","highlights":[]},"doc://swiftinsg/tutorials/Todo":{"role":"overview","title":"Building a Todo List App","abstract":[{"type":"text","text":"This tutorial recaps on the concepts taught in the "},{"type":"reference","isActive":true,"identifier":"..\/tutorials\/friends"},{"type":"text","text":" such as "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables, "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, and persistence."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/Todo","kind":"overview","type":"topic","url":"\/tutorials\/todo"},"todo-ch1-persistence-s2-6-TodoData.swift":{"syntax":"swift","content":["import Foundation","import SwiftUI","","class TodoData: ObservableObject {","    @Published var todos: [Todo] = []","    ","    let sampleTodos = [Todo(title: \"go and sleep\"), Todo(title: \"get allergies from cat\")]","    ","    func getArchiveURL() -> URL {","        let plistName = \"todos.plist\"","        let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first!","        ","        return documentsDirectory.appendingPathComponent(plistName)","    }","    ","    func save() {","        let archiveURL = getArchiveURL()","        let propertyListEncoder = PropertyListEncoder()","        let encodedTodos = try? propertyListEncoder.encode(todos)","        try? encodedTodos?.write(to: archiveURL, options: .noFileProtection)","    }","    ","    func load() {","        let archiveURL = getArchiveURL()","        let propertyListDecoder = PropertyListDecoder()","        ","        var finalTodos: [Todo]!","        ","        if let retrievedTodoData = try? Data(contentsOf: archiveURL),","            let decodedTodos = try? propertyListDecoder.decode([Todo].self, from: retrievedTodoData) {","            finalTodos = decodedTodos","        } else {","            finalTodos = sampleTodos","        }","        ","        todos = finalTodos","    }","}"],"fileName":"TodoData.swift","identifier":"todo-ch1-persistence-s2-6-TodoData.swift","type":"file","fileType":"swift","highlights":[{"line":7}]},"doc://swiftinsg/tutorials/swiftinsg/4-TodoPersistence#Creating-a-Task-Model":{"role":"pseudoSymbol","title":"Creating a Task Model","abstract":[{"type":"text","text":"Persistence is not that hard, all you need is some… persistence. HAHHAHAHHAHHHAHAHAH. Persistence refers to the concept of storing data in a way that they will remain there even if you close the app. Currently, when you close the app, any data is thrown away. If you create a new todo, it gets thrown away when you close the app. We want data to persist when the app is closed otherwise the todo list app will be as forgetful as you."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Creating-a-Task-Model","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/4-todopersistence#Creating-a-Task-Model"},"https://gist.github.com/jiachenyee/f0a32b36cc171bd942be4acc0c344dcc":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/gist.github.com\/jiachenyee\/f0a32b36cc171bd942be4acc0c344dcc","url":"https:\/\/gist.github.com\/jiachenyee\/f0a32b36cc171bd942be4acc0c344dcc"},"doc://swiftinsg/tutorials/Todo/Creating-a-Todo-List-app":{"role":"article","title":"Creating a Todo List app","abstract":[],"identifier":"doc:\/\/swiftinsg\/tutorials\/Todo\/Creating-a-Todo-List-app","kind":"article","type":"topic","url":"\/tutorials\/todo\/creating-a-todo-list-app"},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Dismissing-the-Modal":{"role":"pseudoSymbol","title":"Dismissing the Modal","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Dismissing-the-Modal","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Dismissing-the-Modal"},"doc://swiftinsg/tutorials/swiftinsg/2-TodoManipulation#Deleting-a-Todo":{"role":"pseudoSymbol","title":"Deleting a Todo","abstract":[{"type":"text","text":"Use an "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EditButton()"},{"type":"text","text":" to allow users to move and delete todos."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation#Deleting-a-Todo","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/2-todomanipulation#Deleting-a-Todo"},"doc://swiftinsg/tutorials/swiftinsg/2-TodoManipulation#Moving-Todos":{"role":"pseudoSymbol","title":"Moving Todos","abstract":[{"type":"text","text":"Use an "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EditButton()"},{"type":"text","text":" to allow users to move and delete todos."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/2-TodoManipulation#Moving-Todos","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/2-todomanipulation#Moving-Todos"},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Creating-a-new-SwiftUI-View":{"role":"pseudoSymbol","title":"Creating a new SwiftUI View","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Creating-a-new-SwiftUI-View","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Creating-a-new-SwiftUI-View"},"todo-ch1-persistence-s2-5-TodoData.swift":{"syntax":"swift","content":["import Foundation","import SwiftUI","","class TodoData: ObservableObject {","    @Published var todos: [Todo] = []","    ","    let sampleTodos = []","    ","    func getArchiveURL() -> URL {","        let plistName = \"todos.plist\"","        let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first!","        ","        return documentsDirectory.appendingPathComponent(plistName)","    }","    ","    func save() {","        let archiveURL = getArchiveURL()","        let propertyListEncoder = PropertyListEncoder()","        let encodedTodos = try? propertyListEncoder.encode(todos)","        try? encodedTodos?.write(to: archiveURL, options: .noFileProtection)","    }","    ","    func load() {","        let archiveURL = getArchiveURL()","        let propertyListDecoder = PropertyListDecoder()","        ","        var finalTodos: [Todo]!","        ","        if let retrievedTodoData = try? Data(contentsOf: archiveURL),","            let decodedTodos = try? propertyListDecoder.decode([Todo].self, from: retrievedTodoData) {","            finalTodos = decodedTodos","        } else {","            finalTodos = sampleTodos","        }","        ","        todos = finalTodos","    }","}"],"fileName":"TodoData.swift","identifier":"todo-ch1-persistence-s2-5-TodoData.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":7},{"line":10},{"line":19},{"line":20},{"line":27},{"line":29},{"line":30},{"line":31},{"line":33},{"line":36}]},"doc://swiftinsg/tutorials/swiftinsg/1-TodoStrikethrough#Adding-a-Checkmark":{"role":"pseudoSymbol","title":"Adding a Checkmark","abstract":[{"type":"text","text":"Add a checkmark using SF Symbols and use the "},{"type":"codeVoice","code":".strikethrough"},{"type":"text","text":" modifier to add a strikethrough when the todo "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Adding-a-Checkmark","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/1-todostrikethrough#Adding-a-Checkmark"},"todo-ch1-persistence-s3-2-ContentView.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    ","    @Binding var todos: [Todo]","    @State var isSheetPresented = false","    ","    var body: some View {","        NavigationView {","            List {","                ForEach(todos) { todo in","                    Button {","                        let todoIndex = todos.firstIndex(of: todo)!","                        todos[todoIndex].isCompleted.toggle()","                    } label: {","                        HStack {","                            Image(systemName: todo.isCompleted ? \"checkmark.circle.fill\" : \"circle\")","                            Text(todo.title)","                                .strikethrough(todo.isCompleted)","                                .foregroundColor(.black)","                        }","                    }","                }","                .onDelete { indexSet in","                    todos.remove(atOffsets: indexSet)","                }","                .onMove { indices, newOffset in","                    todos.move(fromOffsets: indices, toOffset: newOffset)","                }","            }","            .navigationTitle(\"Todos\")","            .navigationBarItems(leading: EditButton(),","                                trailing: Button {","                                    isSheetPresented = true","                                } label: {","                                    Image(systemName: \"plus\")","                                })","        }","        .sheet(isPresented: $isSheetPresented) {","            NewTodoView(todos: $todos)","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView(todos: .constant([]))","    }","}"],"fileName":"ContentView.swift","identifier":"todo-ch1-persistence-s3-2-ContentView.swift","type":"file","fileType":"swift","highlights":[{"line":47}]},"doc://swiftinsg/tutorials/swiftinsg/0-TodoLists#Creating-a-List":{"role":"pseudoSymbol","title":"Creating a List","abstract":[{"type":"text","text":"This tutorial covers how to use create a "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct, using "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s to iterate over an array of "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" and embedding it in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" with a "},{"type":"codeVoice","code":".navigationTitle"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists#Creating-a-List","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/0-todolists#Creating-a-List"},"todo-ch1-persistence-s1-1-Todo.swift":{"syntax":"swift","content":["import Foundation","","struct Todo: Identifiable, Equatable, Codable {","    var id = UUID()","    ","    var title: String","    var isCompleted = false","}"],"fileName":"Todo.swift","identifier":"todo-ch1-persistence-s1-1-Todo.swift","type":"file","fileType":"swift","highlights":[{"line":3}]},"todo-ch1-persistence-s3-6-TodosApp.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct TodosApp: App {","    ","    @ObservedObject var todoData = TodoData()","    @Environment(\\.scenePhase) var scenePhase","    ","    var body: some Scene {","        WindowGroup {","            ContentView(todos: $todoData.todos)","                .onAppear {","                    todoData.load()","                }","                .onChange(of: scenePhase) { phase in","                    if phase == .inactive {","                        todoData.save()","                    }","                }","        }","    }","}"],"fileName":"TodosApp.swift","identifier":"todo-ch1-persistence-s3-6-TodosApp.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}]},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Embedding-in-NavigationView":{"role":"pseudoSymbol","title":"Embedding in NavigationView","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Embedding-in-NavigationView","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Embedding-in-NavigationView"},"doc://swiftinsg/tutorials/swiftinsg/1-TodoStrikethrough":{"role":"project","title":"Striking Off Todos","estimatedTime":"20min","abstract":[{"type":"text","text":"Add a checkmark using SF Symbols and use the "},{"type":"codeVoice","code":".strikethrough"},{"type":"text","text":" modifier to add a strikethrough when the todo "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough","kind":"project","type":"topic","url":"\/tutorials\/swiftinsg\/1-todostrikethrough"},"todo-ch1-persistence-s3-5-TodosApp.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct TodosApp: App {","    ","    @ObservedObject var todoData = TodoData()","    ","    var body: some Scene {","        WindowGroup {","            ContentView(todos: $todoData.todos)","                .onAppear {","                    todoData.load()","                }","        }","    }","}"],"fileName":"TodosApp.swift","identifier":"todo-ch1-persistence-s3-5-TodosApp.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13}]},"doc://swiftinsg/tutorials/swiftinsg/0-TodoLists":{"role":"project","title":"Listing Todos","estimatedTime":"20min","abstract":[{"type":"text","text":"This tutorial covers how to use create a "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":" struct, using "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s to iterate over an array of "},{"type":"codeVoice","code":"todos"},{"type":"text","text":" and embedding it in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" with a "},{"type":"codeVoice","code":".navigationTitle"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/0-TodoLists","kind":"project","type":"topic","url":"\/tutorials\/swiftinsg\/0-todolists"},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Presenting-the-Modal":{"role":"pseudoSymbol","title":"Presenting the Modal","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Presenting-the-Modal","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Presenting-the-Modal"},"doc://swiftinsg/tutorials/swiftinsg/4-TodoPersistence":{"role":"project","title":"Persisting Todos","estimatedTime":"15min","abstract":[{"type":"text","text":"Persistence is not that hard, all you need is some… persistence. HAHHAHAHHAHHHAHAHAH. Persistence refers to the concept of storing data in a way that they will remain there even if you close the app. Currently, when you close the app, any data is thrown away. If you create a new todo, it gets thrown away when you close the app. We want data to persist when the app is closed otherwise the todo list app will be as forgetful as you."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence","kind":"project","type":"topic","url":"\/tutorials\/swiftinsg\/4-todopersistence"},"doc://swiftinsg/tutorials/swiftinsg/4-TodoPersistence#Save-and-Load-Data":{"role":"pseudoSymbol","title":"Save and Load Data","abstract":[{"type":"text","text":"Persistence is not that hard, all you need is some… persistence. HAHHAHAHHAHHHAHAHAH. Persistence refers to the concept of storing data in a way that they will remain there even if you close the app. Currently, when you close the app, any data is thrown away. If you create a new todo, it gets thrown away when you close the app. We want data to persist when the app is closed otherwise the todo list app will be as forgetful as you."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/4-TodoPersistence#Save-and-Load-Data","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/4-todopersistence#Save-and-Load-Data"},"doc://swiftinsg/tutorials/swiftinsg/1-TodoStrikethrough#Adding-a-Strikethrough":{"role":"pseudoSymbol","title":"Adding a Strikethrough","abstract":[{"type":"text","text":"Add a checkmark using SF Symbols and use the "},{"type":"codeVoice","code":".strikethrough"},{"type":"text","text":" modifier to add a strikethrough when the todo "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/1-TodoStrikethrough#Adding-a-Strikethrough","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/1-todostrikethrough#Adding-a-Strikethrough"},"todo-ch1-persistence-s3-1-ContentView.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","    ","    @Binding var todos: [Todo]","    @State var isSheetPresented = false","    ","    var body: some View {","        NavigationView {","            List {","                ForEach(todos) { todo in","                    Button {","                        let todoIndex = todos.firstIndex(of: todo)!","                        todos[todoIndex].isCompleted.toggle()","                    } label: {","                        HStack {","                            Image(systemName: todo.isCompleted ? \"checkmark.circle.fill\" : \"circle\")","                            Text(todo.title)","                                .strikethrough(todo.isCompleted)","                                .foregroundColor(.black)","                        }","                    }","                }","                .onDelete { indexSet in","                    todos.remove(atOffsets: indexSet)","                }","                .onMove { indices, newOffset in","                    todos.move(fromOffsets: indices, toOffset: newOffset)","                }","            }","            .navigationTitle(\"Todos\")","            .navigationBarItems(leading: EditButton(),","                                trailing: Button {","                                    isSheetPresented = true","                                } label: {","                                    Image(systemName: \"plus\")","                                })","        }","        .sheet(isPresented: $isSheetPresented) {","            NewTodoView(todos: $todos)","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"todo-ch1-persistence-s3-1-ContentView.swift","type":"file","fileType":"swift","highlights":[{"line":5}]},"todo-ch1-persistence-s3-3-TodosApp.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct TodosApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","    }","}"],"fileName":"TodosApp.swift","identifier":"todo-ch1-persistence-s3-3-TodosApp.swift","type":"file","fileType":"swift","highlights":[]},"../tutorials/friends":{"title":"Friends tutorial","titleInlineContent":[{"type":"text","text":"Friends tutorial"}],"type":"link","identifier":"..\/tutorials\/friends","url":"..\/tutorials\/friends"},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew#Building-a-Form":{"role":"pseudoSymbol","title":"Building a Form","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew#Building-a-Form","kind":"section","type":"section","url":"\/tutorials\/swiftinsg\/3-todonew#Building-a-Form"},"todo-ch1-persistence-s2-0-New File.png":{"alt":"","type":"image","identifier":"todo-ch1-persistence-s2-0-New File.png","variants":[{"url":"\/images\/todo-ch1-persistence-s2-0-New%20File.png","size":{"width":826,"height":692},"traits":["1x","light"]},{"url":"\/images\/todo-ch1-persistence-s2-0-New%20File~dark.png","size":{"width":826,"height":692},"traits":["1x","dark"]}]},"doc://swiftinsg/tutorials/swiftinsg/3-TodoNew":{"role":"project","title":"Creating New Todos","estimatedTime":"25min","abstract":[{"type":"text","text":"This tutorial covers how to use "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"s, modals and "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" variables to create a new "},{"type":"codeVoice","code":"Todo"},{"type":"text","text":"."}],"identifier":"doc:\/\/swiftinsg\/tutorials\/swiftinsg\/3-TodoNew","kind":"project","type":"topic","url":"\/tutorials\/swiftinsg\/3-todonew"}}}